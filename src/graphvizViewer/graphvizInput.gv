digraph jeopardy {
	graph [id="jeopardy"];
	node [shape="rect", fontname="monospace"];

	idle [label= < <b>idle</b> >, id="idle"];
	idle -> getClueFromJService [label="manualTrigger: \"startGame\"", id="idle_to_getClueFromJService"];

	getClueFromJService [label= < <b>getClueFromJService</b> >, id="getClueFromJService"];
	getClueFromJService -> showClueCategoryAndDollars [label="promise", id="getClueFromJService_to_showClueCategoryAndDollars"];

	showClueCategoryAndDollars [label= < <b>showClueCategoryAndDollars</b> >, id="showClueCategoryAndDollars"];
	showClueCategoryAndDollars -> showClueQuestion [label="timeout: [object Object] / handleShowClueQuestion()", id="showClueCategoryAndDollars_to_showClueQuestion"];

	showClueQuestion [label= < <b>showClueQuestion</b> >, id="showClueQuestion"];
	showClueQuestion -> waitForBuzzes [label="keyboard: space / handleDoneReadingClueQuestion()", id="showClueQuestion_to_waitForBuzzes"];
	showClueQuestion -> showClueQuestion [label="keyboard: \"123456789\" / handleLockout()", id="showClueQuestion_to_showClueQuestion"];

	waitForBuzzes [label= < <b>waitForBuzzes</b> >, id="waitForBuzzes"];
	waitForBuzzes -> waitForTeamAnswer [label="keyboard: \"123456789\" [canTeamBuzz]  / saveCountdownTimerForWaitForBuzzesState()", id="waitForBuzzes_to_waitForTeamAnswer"];
	waitForBuzzes -> showAnswer [label="timeout: function () { [native code] } / playSoundQuestionTimeout()", id="waitForBuzzes_to_showAnswer"];

	waitForTeamAnswer [label= < <b>waitForTeamAnswer</b><br/>onEnter: handleBuzzerPress() >, id="waitForTeamAnswer"];
	waitForTeamAnswer -> showAnswer [label="keyboard: \"y\" / handleAnswerCorrect()", id="waitForTeamAnswer_to_showAnswer"];
	waitForTeamAnswer -> answerWrongOrTimeout [label="keyboard: \"n\"", id="waitForTeamAnswer_to_answerWrongOrTimeout"];
	waitForTeamAnswer -> answerWrongOrTimeout [label="timeout: [object Object]", id="waitForTeamAnswer_to_answerWrongOrTimeout"];

	answerWrongOrTimeout [label= < <b>answerWrongOrTimeout</b><br/>onEnter: handleAnswerWrongOrTimeout() >, id="answerWrongOrTimeout"];
	answerWrongOrTimeout -> showAnswer [label="if(haveAllTeamsAnswered)", id="answerWrongOrTimeout_to_showAnswer"];
	answerWrongOrTimeout -> waitForBuzzes [label="if(!haveAllTeamsAnswered)", id="answerWrongOrTimeout_to_waitForBuzzes"];

	showAnswer [label= < <b>showAnswer</b><br/>onEnter: handleShowAnswer() >, id="showAnswer"];
	showAnswer -> checkGameEnd [label="timeout: [object Object]", id="showAnswer_to_checkGameEnd"];

	checkGameEnd [label= < <b>checkGameEnd</b> >, id="checkGameEnd"];
	checkGameEnd -> gameEnd [label="if(shouldGameEnd)", id="checkGameEnd_to_gameEnd"];
	checkGameEnd -> getClueFromJService [label="if(!shouldGameEnd)", id="checkGameEnd_to_getClueFromJService"];

	gameEnd [label= < <b>gameEnd</b><br/>onEnter: handleGameEnd() >, id="gameEnd"];
	gameEnd -> idle [label="manualTrigger: \"reset\"", id="gameEnd_to_idle"];

}